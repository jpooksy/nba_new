{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2025-09-15T17:55:36.738877Z", "invocation_id": "b480f1d0-2b34-4ff1-bc5e-c97d95458bac", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.459487Z", "completed_at": "2025-09-15T17:55:36.486238Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.501022Z", "completed_at": "2025-09-15T17:55:36.501052Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04534006118774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.stg_games", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.GAMES\n),\n\n\nrenamed AS (\n    SELECT \n        season_id,\n        team_id,\n        team_abbreviation,\n        team_name,\n        game_id,\n        game_date,\n        matchup,\n        wl,\n        min AS game_duration_mins,\n        pts AS points,\n        fgm AS field_goals_made,\n        fga AS field_goals_attempted,\n        fg_pct AS field_goal_pct,\n        fg3m AS three_point_made,\n        fg3a AS three_point_attempted,\n        fg3_pct AS three_point_pct,\n        ftm AS free_throws_made,\n        fta AS free_throws_attempted,\n        ft_pct AS free_throw_pct,\n        oreb AS offensive_rebounds,\n        dreb AS defensive_rebounds,\n        reb AS total_rebounds,\n        ast AS assists,\n        stl AS steals,\n        blk AS blocks,\n        tov AS turnovers,\n        pf AS personal_fouls,\n        plus_minus,\n        season,\n        game_type\n    FROM \n        source\n)\n\nSELECT \n    *\nFROM\n    renamed", "relation_name": "NBA.staging.stg_games"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.480261Z", "completed_at": "2025-09-15T17:55:36.493980Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.506861Z", "completed_at": "2025-09-15T17:55:36.506877Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05428791046142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.stg_common_player_info", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.COMMON_PLAYER_INFO\n),\n\nrenamed AS (\n    SELECT \n        person_id AS player_id,\n        first_name,\n        last_name,\n        display_first_last AS full_name,\n        display_last_comma_first,\n        display_fi_last,\n        player_slug,\n        birthdate,\n        school,\n        country,\n        last_affiliation,\n        height,\n        weight,\n        season_exp AS seasons_played,\n        jersey,\n        position,\n        rosterstatus AS roster_status,\n        games_played_current_season_flag,\n        team_id,\n        team_name,\n        team_abbreviation,\n        team_code,\n        team_city,\n        playercode,\n        from_year AS first_year_played,\n        to_year AS last_year_played,\n        dleague_flag AS g_league_has_played,\n        nba_flag AS nba_has_played,\n        games_played_flag AS games_played,\n        draft_year,\n        draft_round,\n        draft_number,\n        greatest_75_flag AS greatest_75_member\n    FROM \n        source\n)\n\nSELECT \n    *\nFROM\n    renamed", "relation_name": "NBA.staging.stg_common_player_info"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.496634Z", "completed_at": "2025-09-15T17:55:36.517256Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.544220Z", "completed_at": "2025-09-15T17:55:36.544238Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.06798386573791504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.stg_team_stats_by_season", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.TEAM_STATS_BY_SEASON\n),\nrenamed AS (\n    SELECT \n        team_id,\n        team_city,\n        team_name,\n        year AS season,\n        gp AS games_played,\n        wins,\n        losses,\n        conf_rank AS conference_rank,\n        div_rank AS division_rank,\n        po_wins AS playoff_wins,\n        po_losses AS playoff_losses,\n        nba_finals_appearance,\n        fgm AS field_goals_made,\n        fga AS field_goals_attempted,\n        fg3m AS three_pointers_made,\n        fg3a AS three_pointers_attempted,\n        ftm AS free_throws_made,\n        fta AS free_throws_attempted,\n        oreb AS offensive_rebounds,\n        dreb AS defensive_rebounds,\n        reb AS total_rebounds,\n        ast AS assists,\n        pf AS personal_fouls,\n        stl AS steals,\n        tov AS turnovers,\n        blk AS blocks,\n        pts AS points\n    FROM\n        source\n)\n\nSELECT \n    *\nFROM\n    renamed", "relation_name": "NBA.staging.stg_team_stats_by_season"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.563858Z", "completed_at": "2025-09-15T17:55:36.574162Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.598687Z", "completed_at": "2025-09-15T17:55:36.598702Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.11076211929321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.stg_team_spend_by_season", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.TEAM_SPEND_BY_SEASON\n),\n\nrenamed as (\n    SELECT \n        team_id,\n        team_city,\n        team_name,\n        full_name,\n        year as season,\n        total_spend as team_payroll,\n        active_payroll,\n        dead_payroll,\n        luxury_tax_payroll,\n        luxury_tax_space,\n        luxury_tax_bill\n    FROM \n        source\n)\n\nSELECT\n    *\nFROM\n    renamed", "relation_name": "NBA.staging.stg_team_spend_by_season"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.490035Z", "completed_at": "2025-09-15T17:55:36.510987Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.524727Z", "completed_at": "2025-09-15T17:55:36.524752Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.05271577835083008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.stg_player_game_logs", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.PLAYER_GAME_LOGS\n),\n\n\nrenamed AS (\n    SELECT\n        player_id,\n        player_name,\n        nickname,\n        team_id,\n        team_abbreviation,\n        team_name,\n        game_id,\n        game_date,\n        matchup,\n        wl as win_loss,\n        min AS mins_played,\n        fgm AS field_goals_made,\n        fga AS field_goals_attempted,\n        fg_pct AS field_goal_pct,\n        fg3m AS three_point_made,\n        fg3a AS three_point_attempted,\n        fg3_pct AS three_point_pct,\n        ftm AS free_throws_made,\n        fta AS free_throws_attempted,\n        ft_pct AS free_throw_pct,\n        oreb AS offensive_rebounds,\n        dreb AS defensive_rebounds,\n        reb AS total_rebounds,\n        ast AS assists,\n        tov AS turnovers,\n        stl AS steals,\n        blk AS blocks,\n        pf AS personal_fouls,\n        pts AS points,\n        plus_minus AS plus_minus,\n        season,\n        game_type\n    FROM \n        source\n)\n\nSELECT\n    *\nFROM\n    renamed", "relation_name": "NBA.staging.stg_player_game_logs"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.590546Z", "completed_at": "2025-09-15T17:55:36.602496Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.623601Z", "completed_at": "2025-09-15T17:55:36.623613Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.15341687202453613, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.stg_teams", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT \n        *\n    FROM \n        NBA.PUBLIC.TEAMS\n),\n\nrenamed AS (\n    SELECT\n        id as team_id,\n        full_name,\n        abbreviation as team_name_abbreviation,\n        nickname,\n        city,\n        state,\n        year_founded\n    FROM\n        source\n)\n\nSELECT \n    *\nFROM\n    renamed", "relation_name": "NBA.staging.stg_teams"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.550795Z", "completed_at": "2025-09-15T17:55:36.596047Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.618981Z", "completed_at": "2025-09-15T17:55:36.618994Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.09718036651611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.nba.not_null_full_name.26df58b172", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect full_name\nfrom NBA.staging.stg_common_player_info\nwhere full_name is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.532784Z", "completed_at": "2025-09-15T17:55:36.579020Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.609001Z", "completed_at": "2025-09-15T17:55:36.609017Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08038926124572754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.nba.unique_player_id.489f92cfc7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    player_id as unique_field,\n    count(*) as n_records\n\nfrom NBA.staging.stg_common_player_info\nwhere player_id is not null\ngroup by player_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.603622Z", "completed_at": "2025-09-15T17:55:36.632409Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.643023Z", "completed_at": "2025-09-15T17:55:36.643036Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.11635994911193848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.nba.not_null_player_id.2d6184285e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect player_id\nfrom NBA.staging.stg_common_player_info\nwhere player_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.614875Z", "completed_at": "2025-09-15T17:55:36.634718Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.646856Z", "completed_at": "2025-09-15T17:55:36.647059Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.12800121307373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.fct_players_by_college_example", "compiled": true, "compiled_code": "-- The initial Common Table Expression (CTE) aggregates player game logs. It identifies players who have played more than 0 minutes, essentially filtering out players who have no playing time recorded.\nWITH players_by_college AS (\n    SELECT \n        school,\n        count(*) as player_count\n    FROM \n        NBA.staging.stg_common_player_info\n    WHERE\n        school is not null -- This ensures that only rows with a non-null school are included\n    GROUP BY\n        school\n    ORDER BY\n        player_count DESC -- This orders the results by the number of players, from highest to lowest\n)\n\nSELECT \n    *\nFROM \n    players_by_college", "relation_name": "NBA.warehouse.fct_players_by_college_example"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.581009Z", "completed_at": "2025-09-15T17:55:36.622975Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.649060Z", "completed_at": "2025-09-15T17:55:36.649072Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.07337379455566406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.fct_playoff_appearances_by_team_example", "compiled": true, "compiled_code": "-- Calculate playoff appearances and percentages for NBA teams\n\n-- Common Table Expressions (CTEs)\n-- Select relevant team stats and identify the most recent season for each team\nWITH recent_team_stats AS (\n    SELECT\n        team_id,\n        team_name,\n        season,\n        -- Use ROW_NUMBER() to assign a unique rank (rn) to each row within a team's partition\n        -- The rows are ordered by season in descending order for each team\n        -- This ensures that the most recent season gets rn = 1 for each team\n        ROW_NUMBER() OVER (PARTITION BY team_id ORDER BY season DESC) AS rn,\n        -- Check if both playoff_wins and playoff_losses are equal to zero\n        -- If true, set playoff_appearance to 0; otherwise, set it to 1\n        CASE WHEN playoff_wins = 0 AND playoff_losses = 0 THEN 0 ELSE 1 END AS playoff_appearance\n    FROM\n        NBA.staging.stg_team_stats_by_season\n    WHERE \n        season NOT IN ('2023-2024')\n),\n\n-- Determine the most recent team name for each team\nmost_recent_team_names AS (\n    SELECT\n        team_id,\n        team_name\n    FROM\n        recent_team_stats\n    WHERE\n        rn = 1\n),\n\n-- Count seasons played and sum playoff appearances for each team\nseasons_played AS (\n    SELECT\n        team_id,\n        COUNT(team_id) AS seasons_played,\n        SUM(playoff_appearance) AS playoff_appearances\n    FROM\n        recent_team_stats\n    GROUP BY\n        team_id\n),\n\n-- Calculate playoff appearance percentage for each team\nplayoff_appearance_pct AS (\n    SELECT \n        sp.team_id,\n        sp.seasons_played,\n        sp.playoff_appearances,\n        -- Calculate playoff appearance percentage (playoff_appearances / seasons_played)\n        sp.playoff_appearances / sp.seasons_played AS playoff_appearance_pct\n    FROM\n        seasons_played sp\n)\n\n-- Final query to retrieve results\nSELECT \n    pat.team_id,\n    mrt.team_name,\n    pat.seasons_played,\n    pat.playoff_appearances,\n    pat.playoff_appearance_pct\nFROM\n    playoff_appearance_pct pat\nJOIN\n    most_recent_team_names mrt ON pat.team_id = mrt.team_id\nORDER BY \n    pat.playoff_appearances DESC", "relation_name": "NBA.warehouse.fct_playoff_appearances_by_team_example"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.651195Z", "completed_at": "2025-09-15T17:55:36.661576Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.670112Z", "completed_at": "2025-09-15T17:55:36.670123Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03359627723693848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.player_game_logs_agg_example", "compiled": true, "compiled_code": "-- Aggregate player game logs for regular season games\nWITH player_game_logs_agg AS (\n    SELECT \n        player_id,\n        player_name,\n        season,\n        game_type,\n        -- Total field goals made by the player\n        SUM(field_goals_made) AS field_goals_made,\n        -- Total field goals attempted by the player\n        SUM(field_goals_attempted) AS field_goals_attempted,\n        -- Field goal percentage using macro\n        \n    CASE \n        WHEN SUM(field_goals_attempted) = 0 OR SUM(field_goals_attempted) IS NULL THEN 0\n        ELSE ROUND(CAST(SUM(field_goals_made) AS FLOAT) / CAST(SUM(field_goals_attempted) AS FLOAT) * 100, 2)\n    END\n AS field_goal_pct,\n        -- Total three-point field goals made by the player\n        SUM(three_point_made) AS three_point_made,\n        -- Total three-point field goals attempted by the player\n        SUM(three_point_attempted) AS three_point_attempted,\n        -- Three-point field goal percentage using macro\n        \n    CASE \n        WHEN SUM(three_point_attempted) = 0 OR SUM(three_point_attempted) IS NULL THEN 0\n        ELSE ROUND(CAST(SUM(three_point_made) AS FLOAT) / CAST(SUM(three_point_attempted) AS FLOAT) * 100, 2)\n    END\n AS three_point_pct,\n        -- Total free throws made by the player\n        SUM(free_throws_made) AS free_throws_made,\n        -- Total free throws attempted by the player\n        SUM(free_throws_attempted) AS free_throws_attempted,\n        -- Free throw percentage using macro\n        \n    CASE \n        WHEN SUM(free_throws_attempted) = 0 OR SUM(free_throws_attempted) IS NULL THEN 0\n        ELSE ROUND(CAST(SUM(free_throws_made) AS FLOAT) / CAST(SUM(free_throws_attempted) AS FLOAT) * 100, 2)\n    END\n AS free_throw_pct,\n        -- Total rebounds grabbed by the player\n        SUM(total_rebounds) AS total_rebounds,\n        -- Total offensive rebounds grabbed by the player\n        SUM(offensive_rebounds) AS offensive_rebounds,\n        -- Total defensive rebounds grabbed by the player\n        SUM(defensive_rebounds) AS defensive_rebounds,\n        -- Total assists made by the player\n        SUM(assists) AS assists,\n        -- Total blocks made by the player\n        SUM(blocks) AS blocks,\n        -- Total steals made by the player\n        SUM(steals) AS steals,\n        -- Total personal fouls committed by the player\n        SUM(personal_fouls) AS personal_fouls,\n        -- Total turnovers committed by the player\n        SUM(turnovers) AS turnovers,\n        -- Total points scored by the player\n        SUM(points) AS total_points,\n        -- Plus-minus statistic for the player\n        AVG(points) AS avg_points,\n        -- Plus-minus statistic for the player \n        SUM(plus_minus) AS plus_minus,\n        -- Total minutes played by the player\n        SUM(mins_played) AS mins_played,\n        -- Count of losses when the player participated\n        SUM(CASE WHEN win_loss = 'L' THEN 1 ELSE 0 END) AS loss_counter,\n        -- Count of wins when the player participated\n        SUM(CASE WHEN win_loss = 'W' THEN 1 ELSE 0 END) AS win_counter,\n        -- Count of games played (excluding games with 0 minutes played)\n        SUM(CASE WHEN mins_played > 0 THEN 1 ELSE 0 END) AS games_played_counter\n    FROM \n        -- Reference to the source data table containing player game logs\n        NBA.staging.stg_player_game_logs\n    GROUP BY \n        player_id, player_name, season, game_type\n)\n\n-- Select all aggregated player game statistics\nSELECT\n    * \nFROM\n    player_game_logs_agg", "relation_name": "NBA.intermediate.player_game_logs_agg_example"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.665988Z", "completed_at": "2025-09-15T17:55:36.678312Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.691365Z", "completed_at": "2025-09-15T17:55:36.691479Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.057668209075927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.fct_playoff_games_by_player_example", "compiled": true, "compiled_code": "WITH playoff_stats AS (\n    SELECT\n        player_id,\n        player_name,\n        COUNT(*) AS playoff_games,\n        SUM(CASE WHEN win_loss = 'W' THEN 1 ELSE 0 END) AS playoff_wins\n    FROM\n        NBA.staging.stg_player_game_logs\n    WHERE\n        game_type = 'Playoffs'\n    AND\n        mins_played > 0\n    GROUP BY\n        player_id,\n        player_name\n),\nplayoff_win_percentage AS (\n    SELECT\n        player_id,\n        player_name,\n        playoff_games,\n        playoff_wins,\n        (CAST(playoff_wins AS FLOAT) / playoff_games) AS win_percentage\n    FROM\n        playoff_stats\n), \n\nnba_greatest AS (\n    SELECT\n        player_id,\n        greatest_75_member\n    FROM\n        NBA.staging.stg_common_player_info\n),\n\njoined AS (\n    SELECT\n        pwp.*,\n        ng.greatest_75_member\n    FROM \n        playoff_win_percentage pwp\n    JOIN nba_greatest ng ON\n        pwp.player_id = ng.player_id\n)\n\nSELECT\n    player_id,\n    CASE \n        WHEN greatest_75_member = 'true' THEN player_name || '*'\n        ELSE player_name\n    END AS player_name,\n    playoff_games,\n    playoff_wins,\n    win_percentage\nFROM\n    joined\nORDER BY\n    playoff_games DESC, playoff_wins DESC", "relation_name": "NBA.warehouse.fct_playoff_games_by_player_example"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.695113Z", "completed_at": "2025-09-15T17:55:36.703974Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.704727Z", "completed_at": "2025-09-15T17:55:36.704736Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.02815556526184082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.fct_player_points_per_playoff_season_example", "compiled": true, "compiled_code": "-- Define a Common Table Expression (CTE) to select player game log details\nWITH source AS (\n    -- Selecting specific columns from the player game logs aggregated example table\n    SELECT \n        player_id,       -- Unique identifier for each player\n        player_name,     -- Name of the player\n        season,          -- NBA season\n        total_points,    -- Total Points scored by the player\n        avg_points,      -- Average Points scored by the player\n        game_type        -- Type of the game (e.g., \"Regular Season\", \"Playoffs\")\n    FROM\n        NBA.intermediate.player_game_logs_agg_example -- Reference to the aggregated player game logs table\n),\n\n-- Define a second CTE to select players with the most points per playoff season\nmost_points_per_playoff_season as (\n    SELECT\n        player_id,\n        -- Concatenate player name with season, extracting the last two digits of the season start year\n        -- and removing any spaces, then wrapping the season in parentheses\n        CONCAT(player_name, ' (', REPLACE(SUBSTRING(season, 3, 6), ' ', ''), ')') AS player_season,\n        total_points,\n        avg_points\n    FROM \n        source\n    WHERE\n        game_type = 'Playoffs' -- Filter the data to include only playoff games\n)\n\nSELECT \n    *\nFROM \n    most_points_per_playoff_season\nORDER BY \n    total_points DESC", "relation_name": "NBA.warehouse.fct_player_points_per_playoff_season_example"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-09-15T17:55:36.683668Z", "completed_at": "2025-09-15T17:55:36.715277Z"}, {"name": "execute", "started_at": "2025-09-15T17:55:36.716074Z", "completed_at": "2025-09-15T17:55:36.716082Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.036566734313964844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.nba.fct_player_points_per_regular_season_example", "compiled": true, "compiled_code": "-- Define a Common Table Expression (CTE) to select player game log details\nWITH source AS (\n    -- Selecting specific columns from the player game logs aggregated example table\n    SELECT \n        player_id,       -- Unique identifier for each player\n        player_name,     -- Name of the player\n        season,          -- NBA season\n        total_points,    -- Total Points scored by the player\n        avg_points,      -- Average Points scored by the player\n        game_type        -- Type of the game (e.g., \"Regular Season\", \"Playoffs\")\n    FROM\n        NBA.intermediate.player_game_logs_agg_example -- Reference to the aggregated player game logs table\n),\n\n-- Define a second CTE to select players with the most points per regular season\nmost_points_per_regular_season as (\n    SELECT\n        player_id,\n        -- Concatenate player name with season, extracting the last two digits of the season start year\n        -- and removing any spaces, then wrapping the season in parentheses\n        CONCAT(player_name, ' (', REPLACE(SUBSTRING(season, 3, 6), ' ', ''), ')') AS player_season,\n        total_points,\n        avg_points\n    FROM \n        source\n    WHERE\n        game_type = 'Regular Season' -- Filter the data to include only regular season games\n)\n\nSELECT \n    *\nFROM \n    most_points_per_regular_season\nORDER BY \n    total_points DESC", "relation_name": "NBA.warehouse.fct_player_points_per_regular_season_example"}], "elapsed_time": 1.3545396327972412, "args": {"project_dir": "/workspaces/fxtn7c3oiwkalwzz/repository/nba", "static_parser": true, "profiles_dir": "/workspaces/fxtn7c3oiwkalwzz", "partial_parse": true, "vars": {}, "printer_width": 80, "macro_debugging": false, "partial_parse_file_diff": true, "strict_mode": false, "exclude": [], "write_json": true, "select": [], "cache_selected_only": false, "log_level": "info", "log_path": "/workspaces/fxtn7c3oiwkalwzz/repository/nba/logs", "populate_cache": true, "indirect_selection": "eager", "enable_legacy_logger": false, "source_freshness_run_project_hooks": false, "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt docs generate", "use_colors": true, "log_format": "default", "log_file_max_bytes": 10485760, "defer": false, "quiet": false, "require_resource_names_without_spaces": false, "show_resource_report": false, "version_check": true, "which": "generate", "static": false, "compile": true, "use_colors_file": true, "send_anonymous_usage_stats": true, "introspect": true, "print": true, "empty_catalog": false, "require_explicit_package_overrides_for_builtin_materializations": true, "favor_state": false, "log_format_file": "debug"}}